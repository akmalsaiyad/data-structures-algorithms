Hashing 
storing data in form of key value pair.
where key is decided on based of several factors and value is either boolean or the frequency of data.
It converts time complexity of search, insertion and deletion to O(1).
It has many applications.
___________________________________________________
methods to decide the key:
1. direct address table
2. open addressing : i)Linear probing
		     ii)Quadratic probing
		     iii) Double Hashing
* Collisionhandling
* Chaining 
* Primary/Secondary Clustering 
_____________________________________________________
 m = Number of slots in the hash table
 n = Number of keys to be inserted in the hash table
 
 Load factor a = n/m  ( < 1 )

 Expected time to search/insert/delete < 1/(1 - a) 

 So Search, Insert and Delete take (1/(1 - a)) time
_____________________________________________________
a good general “rule of thumb” is: The hash table should be an array with length about 1.3 times the maximum number of keys that will actually be in the table, and. Size of hash table array should be a prime number.
